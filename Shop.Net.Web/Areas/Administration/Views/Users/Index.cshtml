@using Kendo.Mvc.UI
@using Shop.Net.Web.Areas.Administration.Models
@{
    ViewBag.Title = "Manage user roles";
}

<div class="row">
    <h2>@ViewBag.Title</h2>
</div>

<div class="row">
    @(Html.Kendo().Grid<UserViewModel>()
    .Name("grid")
    .Columns(columns =>
        {
            columns.Bound(p => p.Id).Width(300);
            columns.Bound(p => p.UserName);
            columns.Bound(p => p.Administrator).Width(150);
            columns.Bound(p => p.Employee).Width(150);
            columns.Bound(p => p.Customer).Width(150);
            columns.Command(command => command.Edit()).Width(100);
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
        .Resizable(resize => resize.Columns(true))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.SingleColumn))
        .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.Id).Editable(false);
                model.Field(p => p.UserName).Editable(false);
            })
        .Read(read => read.Action("Get", "Users", new { area = "Administration" }))
        .Update(update => update.Action("Update", "Users", new {area = "Administration"}))
        .Destroy(delete => delete.Action("Delete", "Users", new { area = "Administration" }))
    ))
</div>
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>