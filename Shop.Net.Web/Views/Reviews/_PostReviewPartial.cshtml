@model Shop.Net.Web.Models.Rating.ReviewOutputModel

<div id="ajax-review-post-form">
    @using (Ajax.BeginForm("LeaveReview", "Reviews", new { area = string.Empty }, new AjaxOptions
                                                                          {
                                                                              HttpMethod = "POST",
                                                                              OnSuccess = "reviewLoaded",
                                                                              UpdateTargetId = "ajax-review-post-form",
                                                                              InsertionMode = InsertionMode.ReplaceWith
                                                                          }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Leave feedback about your purchase ...</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.ShipingRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShipingRating, new { htmlAttributes = new { @class = "form-control leave-rating", type = "number" } })
                    @Html.ValidationMessageFor(model => model.ShipingRating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QualityRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QualityRating, new { htmlAttributes = new { @class = "form-control leave-rating", type = "number" } })
                    @Html.ValidationMessageFor(model => model.QualityRating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerServiceRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerServiceRating, new { htmlAttributes = new { @class = "form-control leave-rating", type = "number" } })
                    @Html.ValidationMessageFor(model => model.CustomerServiceRating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PriceRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceRating, new { htmlAttributes = new { @class = "form-control leave-rating", type = "number" } })
                    @Html.ValidationMessageFor(model => model.PriceRating, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Write a short review", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })

            <div class="form-group">
                <div class="col-md-offset-10 col-md-10">
                    <input type="submit" value="Send" class="btn btn-info" />
                </div>
            </div>
        </div>
    }
</div>